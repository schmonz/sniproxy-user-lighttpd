var.sitecert		= siteroot + "letsencrypt/cert/letsencrypt_combined.pem"

server.modules		+= ("mod_openssl", "mod_setenv")
$SERVER["socket"]	== "127.0.0.1:" + siteport_tls {
	ssl.openssl.ssl-conf-cmd= (
		"CipherString"	=> "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384",
		"DHParameters"	=> "/etc/lighttpd/dhparams.pem",
		"MinProtocol"	=> "TLSv1.2",
		"Options"	=> "+ServerPreference"
	)
	ssl.engine		= "enable"
	ssl.pemfile		= sitecert

	setenv.add-response-header = (
		"Strict-Transport-Security" => "max-age=63072000"
	)
}

server.modules		+= ("mod_redirect")
$HTTP["scheme"]		== "https" {
	# this is TLS traffic (possibly to non-canonical name)
	# redirect, iff needed, to canonical name
	$HTTP["host"]	!= sitecanonical {
		url.redirect	= (
			"" => "https://" + sitecanonical + "${url.path}${qsa}"
		)
	}
} else $HTTP["host"]	=~ "^(.*?)(:\d+)?$" {
	# this is non-TLS traffic (possibly to non-canonical name)
	# redirect to TLS (and canonical name)
	url.redirect	= (
		"" => "https://" + sitecanonical + "${url.path}${qsa}"
	)
}
